[General]
# Power Model Example:
# This example shows the use and capabilities of ESTNeT's power model.
# The behavior is recorded and can be reviewed in the result folder after execution
# In the first configuration, the solar panels just fill a empty battery
# In the second configuration, consumers are added to model a whole system

# NETWORK, RECORDING AND SIMULATION CONFIGURATION
network = estnet.SpaceTerrestrialNetwork
sim-time-limit = 20000s
*.globalJulianDate.simulationStart = "2020-03-11T10:58:00.00+01:00Z"

**.statistic-recording = true
**.energyModule.**.result-recording-modes = +mean
**.energyModule.**.vector-recording = true
**.energyModule.**.scalar-recording = true
**.scalar-recording = false


# SATELLITE ORBITS
*.numS = 2 # number of satellites
*.sat[*].label = "Satellite"
*.sat[*].networkHost.mobility.positionPropagator.a = (6371km + 10000km)
*.sat[*].networkHost.mobility.positionPropagator.e = 0
*.sat[*].networkHost.mobility.positionPropagator.i = 97deg
*.sat[*].networkHost.mobility.positionPropagator.raan = 270deg
*.sat[*].networkHost.mobility.positionPropagator.aop = 270deg
*.sat[0].networkHost.mobility.positionPropagator.v = 0
*.sat[1].networkHost.mobility.positionPropagator.v = 10deg


# GROUND STATIONS
*.numCg = 0     # not using a ground stations


# RADIO AND MEDIUM
*.mediumType = "inet.physicallayer.unitdisk.UnitDiskRadioMedium"
*.radioMedium.obstacleLoss.typename = "IdealObstacleLoss"
*.physicalEnvironment.config = xmldoc("../../data/earthObstacle.xml")
*.*.networkHost.wlan[*].radioType = "UnitDiskRadio"
*.*.networkHost.wlan[*].radio.transmitter.communicationRange = 10000km
*.*.networkHost.wlan[*].bitrate = 9600bps
*.*.networkHost.wlan[*].radio.antenna.mobilityModule = "^.^.^.mobility"


# TRACKING 
*.sat[0].attitudeController.target = "SUN" 	# satellite 1 is tracking the sun
*.sat[1].attitudeController.target = "1"	# satellite 2 is tracking satellite 1


# PROTOCOL
*.*.hostType = "estnet.protocol.simpleprotocol.SimpleProtocolNode"
*.*.networkHost.wlan[*].macType = "estnet.mac.ideal.IdealMacExtraStatistics"


# VISUALIZATION
*.sat[*].osgNode.modelURL = "../../data/UWEModel.STL.500.scale.0,-90,0.rot"
*.cg[*].osgNode.modelURL = "../../data/UWEModel.STL.0,90,0.rot"
*.osgEarthScene.sceneModel = "../../data/blueMarble.earth"


[Config SolarPanels]
# This configuration presents the models for energy generation 
*.sat[*].energyModelEnable = true

# Configurate solar panels like a 3u CubeSat
*.sat[*].energyModule.solarPanelType = "estnet.power.solarpanel.CubeSatPanel_CESI"
*.sat[*].energyModule.numSolarPanel = 6
*.sat[*].energyModule.solarpanel[1].roll = 270 deg
*.sat[*].energyModule.solarpanel[2].roll = 90 deg
*.sat[*].energyModule.solarpanel[3].roll = 180 deg
*.sat[*].energyModule.solarpanel[4].pitch = 90 deg
*.sat[*].energyModule.solarpanel[5].pitch = -90 deg
*.sat[*].energyModule.solarpanel[0..3].numSolarCells = 6
*.sat[*].energyModule.solarpanel[4..5].numSolarCells = 2

# Set inital battery state to empty
*.sat[*].energyModule.battery.initialCapacity = 1000J
*.sat[*].energyModule.battery.nominalCapacity = 20000J

# Turn power consumption of acs off
*.sat[*].attitudeController.pathToEnergySource = ""


[Config SimpleSystemModel] 
extends = SolarPanels

# Configure a constant consumers 
*.sat[*].energyModule.consumer[0].numConstant = 1
*.sat[*].energyModule.consumer[0].constantConsumers[0].powerConsumption = 0.4W
*.sat[*].energyModule.consumer[0].constantConsumers[0].submoduleName = "OnBoardComputer"

# Configure consumption of navigation hardware
*.sat[*].energyModule.consumer[0].numNav = 1
*.sat[*].energyModule.consumer[0].NAV[*].numHandler = 1
*.sat[*].energyModule.consumer[0].NAV[*].handlerType1 = "ConstantDutyCycleConsumer"
*.sat[*].energyModule.consumer[0].NAV[*].stateHandler1.onTime = 10s
*.sat[*].energyModule.consumer[0].NAV[*].stateHandler1.offTime = 90s
*.sat[*].energyModule.consumer[0].NAV[*].stateHandler1.powerConsumption = 0.16W
*.sat[*].energyModule.consumer[0].NAV[*].handlerType2 = ""

# Configure consumption of attitude determination 
*.sat[*].energyModule.consumer[0].numAds = 1
*.sat[*].energyModule.consumer[0].ADS[*].handlerType1 = "ConstantDutyCycleConsumer"
*.sat[*].energyModule.consumer[0].ADS[*].stateHandler1.onTime = 53s
*.sat[*].energyModule.consumer[0].ADS[*].stateHandler1.offTime = 47s
*.sat[*].energyModule.consumer[0].ADS[*].stateHandler1.powerConsumption = 0.25W
*.sat[*].energyModule.consumer[0].ADS[*].stateHandler1.offPowerConsumption = 16mW
*.sat[*].energyModule.consumer[0].ADS[*].handlerType2 = ""

# Configure consumption of a camera, that is active over a target position
*.sat[*].energyModule.consumer[0].numIma = 1
*.sat[*].energyModule.consumer[0].IMA[*].handlerType1 = "TargetTrackingConsumer"
*.sat[*].energyModule.consumer[0].IMA[*].stateHandler1.longitude = 9.980713deg 
*.sat[*].energyModule.consumer[0].IMA[*].stateHandler1.latitude = 49.786844deg
*.sat[*].energyModule.consumer[0].IMA[*].stateHandler1.powerConsumption = 1.8W
*.sat[*].energyModule.consumer[0].IMA[*].stateHandler1.offPowerConsumption = 16mW
*.sat[*].energyModule.consumer[0].IMA[*].handlerType2 = ""

# Configure consumption of an extra computing board for image processing and other computing tasks
*.sat[*].energyModule.consumer[0].numHpcu = 1
*.sat[*].energyModule.consumer[0].HPCU[*].stateHandler1.MTA = 20s
*.sat[*].energyModule.consumer[0].HPCU[*].stateHandler1.MTR = 180s
*.sat[*].energyModule.consumer[0].HPCU[*].stateHandler1.powerConsumption = 1W
*.sat[*].energyModule.consumer[0].HPCU[*].stateHandler1.std = 10

*.sat[*].energyModule.consumer[0].HPCU[*].handlerType2 = "CoupledConsumer"
*.sat[*].energyModule.consumer[0].HPCU[*].stateHandler2.powerConsumption = 4.5W
*.sat[*].energyModule.consumer[0].HPCU[*].stateHandler2.pathToCoupledConsumer = ".^.^.IMA[0]"

